{**
 * The Bootstrap style nette forms
 *
 * Due to bootstraps nature, we have following options available:
 * $field->setOption('help', 'help text shown next to control');
 * $field->setOption('status', 'warning|errors|success'); --> the css style of the field
 * $field->setOption('prepend', 'text'); --> the prepend field part
 * $field->setOption('append', 'text');  --> the append field part
 * $field->setOption('placeholder', 'text'); --> the placeholder="" parameter
 *
 * If you want block style of help, use following:
 * $field->setOption('help', 'help text shown next to control')->setOption('help-style', 'block');
 *
 * The neat inline checkboxes are generated this way:
 *   $form->addCheckbox('chk1', 'caption 1')->setOption('inline', true)->setOption('label', 'checkbox group label');
 *   $form->addCheckbox('chk2', 'caption 2')->setOption('inline', true);
 *   $form->addCheckbox('chk3', 'caption 3')->setOption('inline', true);
 *
 * Buttons have some special classes as well:
 * $form->addSubmit()->setOption('class', 'btn-success')
 *
 * Prepend/append can be used with conjunction of:
 * $field->setOption('prepend-button', 'id');
 * $field->setOption('append-button', 'id');
 *   where the "id" means HTML id of button, so that you can use it within javascripts
 *
 * Prepend/append buttons can be used also with:
 * $field->setOption('prepend-button-class', 'btn-success|btn-warning|btn-danger|btn-primary|...');
 * $field->setOption('append-button-class', 'btn-success|btn-warning|btn-danger|btn-primary|...');
 *   where the value is appended as class to the button
 *
 * If you want inline checkboxes / radiobuttons, use following attribute on EACH checkbox of the inline group:
 * $field->setOption('inline', true);
 *
 * If you are working with submits or buttons & want to edit class, use the "Standart Nette Way ^TM":
 * $field->controlPrototype->class = 'btn btn-success'; // (this generates green button)
 *
 * OVERLOADING:
 * Don't really worry about manually editing this file -- altough it's possible, much cleaner approach is to create
 * your own template with following markup:
 *   {layout 'path/to/bootstrap.latte'}
 *   {define #TextInput}<insert text input markup here>{/define}
 *
 * If you want to overload some field but not overload the input globally, use following:
 * $field->setOption('latte', 'path/to/your/overloaded.latte');
 *
 * ... or:
 * $field->setOption('blockname', 'nameOfYourDefineBlockWithoutHash');
 *
 * NOTE:
 * In this template, the <hidden> fields are rendered as last. The easiest way to extend any field is:
 *     $form->addHidden(...)->setOption('latte', 'path/to/your/field.latte')
 *
 * @author Pavel Ptacek
 *}

{* ====== Do not edit bellow this line. It contains the full markup. ====== *}
{* Base style (the most generic one) *}
{define #BaseStyle}
{php $horizontalForm = (strpos($form->getElementPrototype()->attrs['class'], 'form-horizontal') !== false)}

{* Create row for the field if this is horizontal form *}
<div id="{$control->htmlId}-pair" n:class="form-group, $control->getOption('status')?  'has-' . $control->getOption('status'), $control->getOption('required')? required, $control->errors ? has-error">

    {* Setup *}
    {if !isset($control->labelPrototype->class) && $horizontalForm}{php $control->labelPrototype->class = 'control-label col-xs-12 col-sm-2'}{/if}
    {if !isset($control->labelPrototype->class) && !$horizontalForm}{php $control->labelPrototype->class = 'control-label'}{/if}
    {if !$control->getOption('class', false) && !isset($control->controlPrototype->class)}{php $control->controlPrototype->class = 'form-control'}{/if}
    {if $control->getOption('placeholder', false)}{php $control->controlPrototype->placeholder = $control->getOption('placeholder')}{/if}
    {if $control->getOption('class', false)}{php $control->controlPrototype->class = $control->getOption('class')}{/if}
    {var $prepend => ''}
    {var $append => ''}

    {* Prepend *}
    {if $control->getOption('prepend-html')}
        {$prepend = $control->getOption('prepend-html')}
    {elseif $control->getOption('prepend-button')}
        {capture $prepend}
            <span class="input-group-btn">
                <button type="submit" class="btn {$control->getOption('prepend-button-class')}">{$control->getOption('prepend')}</button>
            </span>
        {/capture}
    {elseif $control->getOption('prepend')}
        {capture $prepend}<span class="input-group-addon">{$control->getOption('prepend')}</span>{/capture}
    {/if}
    {if $control->getOption('append-html')}
        {php $append = $control->getOption('append-html')}
    {elseif $control->getOption('append-button')}
        {capture $append}
            <span class="input-group-btn">
                <button type="submit" class="btn {$control->getOption('append-button-class')}">{$control->getOption('append')}</button>
            </span>
        {/capture}
    {elseif $control->getOption('append')}
        {capture $append}<span class="input-group-addon">{$control->getOption('append')}</span>{/capture}
    {/if}

    {* Label *}
    {label $renderer->getControlName($control) /}

    {* Input *}
    {if $horizontalForm}<div class="col-xs-12 col-sm-6">{/if}
        {if $prepend || $append}<div class="input-group">{/if}
            {$prepend|noescape}{input $renderer->getControlName($control)}{$append|noescape}
        {if $prepend || $append}</div>{/if}
        {if $control->getOption('help-style', 'inline') === 'block'}{include #helpAndError control => $control}{/if}
    {if $horizontalForm}</div>{/if}

    {if $control->getOption('help-style', 'inline') === 'inline'}{include #helpAndError control => $control}{/if}
</div>
{/define}

{* base help block *}
{define #helpAndError}
    <p class="help-block" n:if="$control->getOption('help', false) && !$control->hasErrors()">{$control->getOption('help')}</p>
    <p class="help-block" n:if="$control->hasErrors()" n:foreach="$control->getErrors() as $err">{$err}</p>
{/define}

{* Radio list. Thanks to fucking bootstrap, we have to fucking copypastah codez. *}
{define #RadioList}
{php $horizontalForm = (strpos($form->getElementPrototype()->attrs['class'], 'form-horizontal') !== false)}
    <div id="{$control->htmlId}-pair" n:class="form-group, $control->getOption('status')?  'has-' . $control->getOption('status'), $control->getOption('required')? required, $control->errors ? has-error">

        {* Setup *}
        {if !isset($control->labelPrototype->class) && $horizontalForm}{php $control->labelPrototype->class = 'control-label col-xs-12 col-sm-2'}{/if}
        {if !isset($control->labelPrototype->class) && !$horizontalForm}{php $control->labelPrototype->class = 'control-label'}{/if}

        {* Label *}
        {label $renderer->getControlName($control) /}

        {* Input *}
        {if $horizontalForm}<div class="col-xs-12 col-sm-6">{/if}
            {foreach $control->items as $key => $item}
                {if !$control->getOption('inline', false)}<div class="radio">{/if}
                {var one => $control->getControl($key)}
                {$one[1]->addClass($control->getOption('inline') ? 'radio-inline' : 'radio')->startTag()|noescape}{$one[0]}{$item}{$one[1]->endTag()|noescape}
                {if !$control->getOption('inline', false)}</div>{/if}
            {/foreach}
            {if $control->getOption('help-style', 'inline') === 'block'}{include #helpAndError control => $control}{/if}
        {if $horizontalForm}</div>{/if}

        {if $control->getOption('help-style', 'inline') === 'inline'}{include #helpAndError control => $control}{/if}
    </div>
{/define}

{* Checkbox + checkbox inline styles. Thanks to fucking bootstrap, we have to fucking copypastah codez. *}
{define #Checkbox}
{php $horizontalForm = (strpos($form->getElementPrototype()->attrs['class'], 'form-horizontal') !== false)}

    <div n:if="!$control->getOption('inline', false)" id="{$control->htmlId}-pair" n:class="form-group, $control->getOption('status')?  'has-' . $control->getOption('status'), $control->getOption('required')? required, $control->errors ? has-error">
        {if $horizontalForm}<div class="col-sm-offset-2 col-sm-10">{/if}
            <div class="checkbox">
                {$control->label->addClass('inline checkbox')->startTag()|noescape}{input $renderer->getControlName($control)}{$control->caption}{$control->label->endTag()|noescape}
            </div>
            {include #helpAndError control => $control}
        {if $horizontalForm}</div>{/if}
    </div>

    {if $control->getOption('inline', false)}
        {if $renderer->openStack()}
            <div id="{$control->htmlId}-pair" n:class="form-group, $control->getOption('status')?  'has-' . $control->getOption('status'), $control->getOption('required')? required, $control->errors ? has-error">
            <label n:if="$horizontalForm" class="control-label col-xs-12 col-sm-2">{$control->getOption('label')}</label>
            <label n:if="!$horizontalForm" class="control-label">{$control->getOption('label')}</label>
            {if $horizontalForm}<div class="col-xs-12 col-sm-6">{/if}
            {if !$horizontalForm}<div>{/if}
        {/if}

        {$control->label->addClass('checkbox-inline')->startTag()|noescape}{input $renderer->getControlName($control)}{$control->caption}{$control->label->endTag()|noescape}
    {/if}
    {if $renderer->closeStack($iterator, $control)}
        </div>
        {include #helpAndError control => $control}
        </div>
    {/if}
{/define}

{* buttons *}
{define #Button}
	{php $horizontalForm = (strpos($form->getElementPrototype()->attrs['class'], 'form-horizontal') !== false)}
	{php $control->controlPrototype->addClass('btn')->addClass($control->getOption('class', ''))}
    {if $renderer->openStack()}<div class="form-group">{if $horizontalForm}<div class="col-sm-offset-2 col-sm-10">{/if}{/if}
    {input $renderer->getControlName($control)}
    {if $renderer->closeStack($iterator, $control)}{if $horizontalForm}</div>{/if}</div>{/if}
{/define}

{* Inheriting fields *}
{define #SelectBox}{include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}
{define #MultiSelectBox}{include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}
{define #TextInput}{include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}
{define #TextArea}{include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}
{define #UploadControl}{include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}

{define #ImageButton}{include #Button control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}
{define #SubmitButton}{include #Button control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}{/define}

{* Simple fields *}
{define #HiddenField}{input $renderer->getControlName($control)}{/define}

{* ====== The main form rendering code ====== *}
{block #form}
	{php $renderer->setFormClass($form, 'form-horizontal', array('form-inline', 'form-horizontal', 'form-search', 'form-default'))}
{form $form role => 'form'}
    {* errors *}
    <div class="row" n:if="!empty($errors)">
        <div class="alert alert-danger" n:foreach="$errors as $error">{$error}</div>
    </div>

    {* groups *}
    {foreach $form->getGroups() as $group}
        {if $group->getOption('label', false)}
            <div class="row"><fieldset><legend>{$group->getOption('label')}</legend>
            {if $group->getOption('description', false)}<p>{$group->getOption('description')}</p>{/if}
        {/if}

        {foreach $group->controls as $control}
            {continueIf $control->getForm(FALSE) !== $form || $control->getOption('rendered') || !$group->getControls() || !$group->getOption('visual')}
            {var $block => $control->getOption('blockname')}
            {ifset #$block}
                {include #$block control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}
            {elseif $control->getOption('latte', false)}
                {include $control->getOption('latte') control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}
            {else}
                {include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}
            {/ifset}
	        {php $control->setOption('rendered', true)}
        {/foreach}

        {if $group->getOption('label', false)}</fieldset></div>{/if}
    {/foreach}

    {* rest of the controls *}
    {foreach $form->getControls() as $control}
        {continueIf $control->getForm(FALSE) !== $form || $control->getOption('rendered')}
        {var $block => $control->getOption('blockname')}
        {ifset #$block}
            {include #$block control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}
        {elseif $control->getOption('latte', false)}
            {include $control->getOption('latte') control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}
        {else}
            {include #BaseStyle control => $control, form => $form, errors => $errors, renderer => $renderer, iterator => $iterator}
        {/ifset}
	    {php $control->setOption('rendered', true)}
    {/foreach}
{/form}
{/block}
